// Тема 60 - Векторы

#include <iostream>
#include <vector>

using namespace std;

int main()
{
    // Вектор представляет контейнер, который содержит коллекцию объектов одного типа
    // Vector — это массив с изменяемым размером, который работает путем перераспределения памяти 
    // и копирования элементов старого массива в новый массив
    std::vector<int> numbers; // Вектор типа int
    
    // Инициализация векторов
    std::vector<int> v1(5);           // вектор v4 состоит из 5 чисел, каждое число равно 0
    std::vector<int> v2(5, 2);        // вектор v5 состоит из 5 чисел, каждое число равно 2
    std::vector<int> v3{1, 2, 3, 4, 5};  // вектор v6 состоит из чисел 1, 2, 3, 4, 5
    
    // Обращение к элементам вектора
    cout << v3[2] << endl; // Обращение по индексу
    cout << v3.at(4) << endl;  // Обращение по индексу, исключает попытку обращения к недопустимому индексу
    cout << v3.front() << endl; // Нулевой элемент вектора
    cout << v3.back() << endl; // Последний элемент вектора

    // Изменение элемента вектора
    v3[2] = 10;
    
    // Перебор векторов
    for (int i = 0; i < 5; i++){
        cout << v3[i] << " ";
    }
    cout << endl;
    // Другой способ перебора векторов
    for (int i : v3){
        cout << i << " ";
    }
    cout << endl;
    
    // Сравнение векторов
    cout << (v1 != v2) << endl;

    // Обработка исключения при обращении к неверному индексу
    try
    {
       cout << v3.at(8);  // Пытаемся обратиться к восьмому элементу
    }
    catch (std::out_of_range e)
    {
        cout << "Incorrect index";
    }
    return 0;
}