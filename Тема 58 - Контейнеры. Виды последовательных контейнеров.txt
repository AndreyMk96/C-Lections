// Тема - 57 - Контейнеры, Виды последовательных контейнеров
#include <iostream>
#include <vector>
#include <deque>
#include <list>
#include <forward_list>

using namespace std;

int main()
{
    // Для управления наборами объектов в стандартной библиотеке C++ определены контейнеры.
    // Контейнер представляет коллекцию объектов определенного типа и позволяет и управлять доступом к этим элементам.
    // В С++ есть два типа контейнеров: ассоциативные и последовательные.

    // Контейнеры можно разделить на три категории: последовательные контейнеры, ассоциативные контейнеры и контейнеры-адаптеры.

    // Последовательные контейнеры
    // array - коллекция фиксированного размера.
    // Поддерживает произвольный доступ к любому элементу в контейнере.
    //Добавлять или удалять элементы из контейнера нельзя.
    int arr[5] = {1, 2, 3, 4, 5};

    // vector - коллекция переменного размера.
    // Поддерживает произвольный доступ к любому элементу в контейнере.
    // Обеспечивает добавление и удаление элементов из любого места контейнера.
    std::vector<int> v1{1, 2, 3, 4, 5};

    // deque - двусторонняя очередь.
    // Поддерживает произвольный доступ к любому элементу в контейнере.
    // Обеспечивает удаление и добавление элементов в начале и в конце контейнера.
    std::deque<int> numbers {1, 2, 3, 4, 5};

    // list - двухсвязный список
    // Поддерживает только последовательный двухнаправленный доступ к элементам.
    // Обеспечивает удаление и добавление элементов в начале и в конце контейнера.
    // Контейнер list представляет двухсвязный список, то есть такой список, где каждый элемент имеет указатели на
    // предыдущий и последовательный элемент.
    std::list<int> list4{ 1, 2, 3, 4, 5 };

    // forward_list - односвязный список.
    // Поддерживает только однонаправленный последовательный доступ к элементам.
    // Обеспечивает удаление и добавление элементов в начале и в конце контейнера.
    std::forward_list<int> list2 = { 1, 2, 3, 4, 5 };
}