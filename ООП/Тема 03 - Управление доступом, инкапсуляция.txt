// Тема 3 - Управление доступом. Инкапсуляция

#include <iostream>

using namespace std;

class Point{
private: // Доступ к полям с модификатором private открыт только самому классу, либо дружественным классам и функциям
    int x;
    int y;
public: // Доступ к полям с модификатором public возможен через объект класса
    int z;
    void Print(){ // Внутри класса мы можем обращаться как к public так и к private полям
        cout << x << " " << y << " " << z << endl;
    }
protected: // Доступ к полям с модификатором protectd возможен у наследников класса
    int k;
};

//Модификаторы доступа в C++, отвечают не за конкретное поле, а за область
//Данное сокрытие функционала - это пример инкапсуляции
int main()
{
    Point a;
    // a.x = 10; В случае, если никакой модификатор доступа не определен, будет ошибка, тк по умолчанию определяется модификатор 
    // доступа private
    a.Print();
    return 0;
}
