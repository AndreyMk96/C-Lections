// Тема 27 - Пространства имен

/*Пространство имен позволяет сгруппировать функционал в отдельные контейнеры. 
Пространство имен представляет блок кода, который содержит набор компонентов (функций, классов и т.д.) 
и имеет некоторое имя, которое прикрепляется к каждому компоненту из этого пространства имен. 
Полное имя каждого компонента — это имя пространства имен, за которым следует оператор :: 
(оператор области видимости или scope operator) и имя компонента. Примером может служить оператор cout, 
который предназначен для вывода строки на консоль и который определен в пространстве имен std. 
Соответственно чтобы обратиться к этому оператору, применяется выражение std::cout.*/

// Для определения пространства имен применяется ключевое слово namespace, за которым идет название имени пространства имен:


#include <iostream>

using namespace std;

// Например, определим пространство имен, которое назовем hello: 
namespace hello
{
    const string message{"hello world"};
    void print(const std::string& text)
    {
        std::cout << text << std::endl;
    }
}

namespace console
{
    namespace messages
    {
        const std::string hello{"hello"};
        const std::string welcome{"Welcome"};
        const std::string goodbye{"Good bye"};
    }
    void print(const std::string& text)
    {
        std::cout << text << std::endl;
    }
    void print_default()
    {
        std::cout << messages::hello << std::endl;
    }
}

// Директива using позволяет ссылаться на любой компонент пространства имен без использования его имени:
// using namespace hello;
// using namespace console;

// Одно пространство имен может содержать другие пространства:
int main()
{
    hello::print(hello::message);   // hello world
    console::print(console::messages::hello); // console { messages { hello}}
}