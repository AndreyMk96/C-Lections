// Тема 31 - SOLID принципы ч. 4

/*Принцип подстановки Барбары Лисков (Liskov Substitution Principle, LSP) - это один из пяти принципов SOLID, 
разработанных Барбарой Лисков. Этот принцип гласит, что объекты должны быть заменяемыми своими подтипами без 
изменения свойств программы. Иными словами, если S - это подтип T, то объекты типа T могут быть заменены объектами 
типа S без нарушения корректности программы.*/

#include <iostream>

// В этом примере классы Circle и Square являются подклассами класса Shape. 
// При вызове функции drawShape с объектами типа Circle и Square, они могут 
// быть заменены объектом типа Shape без изменения поведения программы.

class Shape {
public:
    virtual void draw() const {
        std::cout << "Drawing a shape." << std::endl;
    }
};

class Circle : public Shape {
public:
    void draw() const override {
        std::cout << "Drawing a circle." << std::endl;
    }
};

class Square : public Shape {
public:
    void draw() const override {
        std::cout << "Drawing a square." << std::endl;
    }
};

void drawShape(const Shape& shape) {
    shape.draw();
}

int main() {
    Circle circle;
    Square square;

    drawShape(circle); // Ожидаем вывод "Drawing a circle."
    drawShape(square); // Ожидаем вывод "Drawing a square."

    return 0;
}