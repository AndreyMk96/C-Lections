// Тема 01 - Классы

/* Кроме использования встроенных типов, таких как int, double и т.д., мы можем определять свои собственные типы или классы. 
Класс представляет составной тип, который может использовать другие типы, Другими словами Класс - это пользовательский тип данных*/

//Для определения класса применяется ключевое слово class, после которого идет имя класса:

//Класс может определять переменные и константы для хранения состояния объекта и функции для определения поведения объекта. 
//Поэтому добавим в класс Person некоторое состояние и поведение:

// Переменные класса еще называют полями класса
// Также стоит обратить внимание на модификатор доступа public:, который указывает, что идущие после него 
// переменные и функции будут доступны извне, из внешнего кода

#include <iostream>
using namespace std;
class Person 
// Внутри фигурных скобок тело класса
{
public:
    string name;
    int age;
    // Также переменные можно инициализирвать внутри класса
    string surname = "Ivanov";
    void print() 
    {
        cout << "Name: " << name << " " << "Surname: " << surname << " " << "Age: " << age << endl;
    }
};


int main()
{
    // Создаем экземпляр класса
    Person person;
    // устанавливаем значения полей класса
    person.name = "Tom";
    person.age = 38;
    // вызываем функцию класса
    person.print();
    string username = person.name;
    int userage = person.age;
    // выводим полученные данные на консоль
    cout << "Name: " << username << "\tAge: " << userage << std::endl;
    
    /*На объекты классов, как и на объекты других типов, можно определять указатели. 
    Затем через указатель можно обращаться к членам класса - переменным и методам. 
    Однако если при обращении через обычную переменную используется символ точка, то для обращения к членам 
    класса через указатель применяется стрелка (->):*/
    
    Person person2;
    Person *ptr = &person2;
    // обращаемся к полям и функции объекта через указатель
    ptr->name = "Jack";
    ptr->age = 22;
    ptr->print();
    // обращаемся к полям объекта
    cout << "Name: " << person2.name << "\tAge: " << person2.age << std::endl;
    
    // Задачи
    
    /*1. Создайте класс "автомобиль", который будет содержать поля "марка", "модель", "год выпуска" и "цвет". 
    Реализуйте методы для получения и установки значений этих полей.*/

    /*2. Создайте класс "круг", который будет содержать поля "радиус" и "площадь". 
    Реализуйте методы для вычисления площади круга и получения и установки значения радиуса.*/
    
    /*3. Создайте класс "квадрат", который будет содержать поля "длина стороны" и "площадь". 
    Реализуйте метод для получения значений этих полей, а также метод для расчета периметра квадрата.*/

    return 0;
}