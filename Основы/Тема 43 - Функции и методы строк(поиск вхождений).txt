// Тема 42 - Функции и методы строк (поиск вхождений)

#include <iostream>

using namespace std;

int main()
{
    string str = "Hi, Friend";

    // Получение подстроки по индексу
    cout << str.substr(4, 10) << endl;
    cout << str.substr(4) << endl; // Если необходимо взять все символы до конца, достаточно указать индекс начала
    // Задача:
    // 1) Дан массив из строк. Пользователь вводит начало строки. Вывести только те строки, которые начинаются с введенной пользователем подстроки
    // 2) Дан массив из строк. Поллзователь вводит с клавиатуры подстроку. Вывести только те строки, которые заканчиваются с введенной пользователем подстроки
    // 2) Дан массив из строк. Поллзователь вводит с клавиатуры подстроку. Вывести только те строки, которые содержат введенную пользователем подстроку

    // Поиск первого вхождения подстроки в строку
    cout << str.find("Friend") << endl;
    // Если строка или символ не найдены (как в примере выше в последнем случае), то возвращается специальная
    // константа std::string::npos, которая представляет очень большое число
    cout << str.find("aaa") << endl;
    // Обработка npos
    if (str.find("aaa") == string::npos)
    {
        cout << "Not found" << endl;
    }
    // Задачи:
    // 1) Дана строка, содержащая один символ *. Определить, находится ли * ближе к началу строки, ближе к концу строки, или посередине
    // 2) Дана строка, содержащая или не содержащая символ *. Определить находится ли * ближе к началу строки, ближе к концу строки, посередине, или ее нет вообще

    // Вторым параметром в метод find(), можно указать промежуток с которого вести поиск
    cout << str.find('i', 4) << endl;
    // Задача. Дана строка с двумя символами *. Определить ближе к какому краю находится *, или на одинаковом расстоянии

    // Используя эту версию, мы можем написать программу для поиска количества вхождений строки в тексте,
    // то есть выяснить, сколько раз строка встречается в тексте
    int count{};       // количество вхождений
    string sub = "i";
    for (int i {}; i <= str.length() - sub.length(); i++)
    {
        size_t position = text.find(word, i); // получаем индекс
        // если не найдено ни одного вхождения с индекса i, выходим из цикла
        if (position == std::string::npos) break;
        // если же вхождение найдено, увеличиваем счетчик вхождений
        ++count;
        // переходим к следующему индексу после position
        i = position + 1;
    }
    std::cout << "The word is found " << count << " times." << std::endl; // The word is found 2 times.
    
    // Еще одна версия позволяет искать в тексте не всю строку, а только ее часть. Для этого в качестве третьего параметра передается                  	// количество символов из искомой строки, которые программа будет искать в тексте:
    std::cout << text.find("endless", 10, 3) << std::endl;
    
    // Поиск символов из набора
    vovels = {"aoeuiy"};
    vovels_counter = 0;
    for(int i = 0; i < str.length() i++){
        if (str[i].find_first_of(vovels) != std::string::npos)
        vovels_counter++;
    }
    cout << vovels_counter << endl;
}