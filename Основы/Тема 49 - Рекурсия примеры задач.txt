// Тема N - Рекурсия, примеры задач

#include <iostream>

using namespace std;

// Вычисление факториала числа
// Работает как 5 * 4 * 3 * 2 * 1
int f(int n) 
{
	int answer;
	if (n == 0) return 0;
	if (n == 1) return 1;
	return n * f(n - 1);
}

// Вычисление последовательности чисел фибоначчи
unsigned long fib(unsigned long number) // функция принимает один аргумент
{
	if (number == 1 || number == 2) // частный случай
		return (number - 1); // ряд чисел Фибоначчи всегда начинается с 0, 1, ...
	return fib(number - 1) + fib(number - 2); // формула поиска н-го числа, например найти восьмое по счёту число, и оно равно 7-е + 6-е
}

// Наибольший общий делитель по алгоритму Евклида
int MaxDiv(int n, int m)
{
    if (n==m)
        return n;
    else
    if (n>m)
        return MaxDiv(n-m, m);
    else
        return MaxDiv(n, m-n);
}

// Проверка является ли строка палиндромом
bool pal(string str, int low, int high)
{
    // Если прошли середину строки
    if (low >= high) return true;
    
    // возвращаем false, если происходит несоответствие
    if (str[low] != str[high]) return false;
 
    // переход к следующей паре
    return pal(str, low + 1, high - 1);
}

int main()
{
    cout << f(5) << endl;
    cout << fib(10) << endl;  // Десятое число фибоначчи = 34
    
    // Чтобы вывести последовательность чисел фибоначчи можно зациклить рекурсивную функцию
    for(int i = 1; i < 11; i++){
        cout << fib(i) << " ";
    }
    cout << endl;
    cout << MaxDiv(21, 35) << endl;
    string str = "abcdcba";
    cout << pal(str, 0, str.length() - 1) << endl;
    return 0;
}

// Задачи:
// 1) Дано натуральное число N. Выведите слово YES, если число N является точной степенью двойки, или слово NO в противном случае.
// Операцией возведения в степень пользоваться нельзя!
// 2) но натуральное число N. Выведите все его цифры по одной, в обратном порядке, разделяя их пробелами или новыми строками.
// 3) Дано число, десятичная запись которого не содержит нулей. Получите число, записанное теми же цифрами, но в противоположном порядке.
